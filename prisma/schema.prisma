generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum role {
  super_admin
  admin
  voter
}

model college {
  id                 Int       @id @default(autoincrement())
  created_at         DateTime  @default(now())
  updated_at         DateTime  @updatedAt
  name               String    @unique @db.VarChar(255)
  suffix_email       String    @unique @db.VarChar(255)
  email              String    @unique @db.VarChar(255)
  is_verified        Boolean   @default(false)
  email_verify_token String?   @db.VarChar(255)
  token_send_at      DateTime?
  users              user[]

  @@map("colleges")
}

model user {
  id                   Int             @id @default(autoincrement())
  created_at           DateTime        @default(now())
  updated_at           DateTime        @updatedAt
  first_name           String?         @db.VarChar(255)
  last_name            String?         @db.VarChar(255)
  email                String          @unique
  role                 role            @default(voter)
  password             String?         @db.VarChar(255)
  is_verified          Boolean         @default(false)
  email_verify_token   String?         @db.VarChar(255)
  password_reset_token String?         @db.VarChar(255)
  token_send_at        DateTime?
  refresh_token        refresh_token[]
  college_id           Int
  college              college?        @relation(fields: [college_id], references: [id])

  @@index([email], name: "email")
  @@map("users")
}

model refresh_token {
  id            Int      @id @default(autoincrement())
  refresh_token String   @db.VarChar(1024)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  user          user?    @relation(fields: [user_id], references: [id])
  user_id       Int?

  @@map("refresh_token")
}
